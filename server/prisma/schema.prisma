// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement()) 
  email     String   @unique
  password  String
  // companies Company[]
  // name      String
  // surname   String
}

model Company {
  id        Int   @id @default(autoincrement()) 
  name      String   @unique
  type      Type
  audit     Boolean
  year_end  Int
  actions   Action[]
  // user      User @relation(fields: [userId], references: [id])
  // userId    Int @unique
  // nif       String @unique
  // cnae      String
  // sole      Boolean
  // incDate   DateTime
  // yearStart DateTime 
  // country   String
  // city      String
  // postcode  Int
  // city      String
  // mgmt      String
  // mgmt_no   Int
  // persons   Person[]
}

model Action {
  id           Int @id @default(autoincrement()) 
  // createdAt DateTime @default(now())
  // updatedAt DateTime @updatedAt
  due_date      Int
  name          String
  company       Company @relation(fields: [companyId], references: [id]) 
  companyId     Int
  // visible   Boolean  @default(true)
  // title     String   @db.VarChar(255)
  // body      Body
  // category  Category
  // frequency Frequency
  // comments  String
}

// model Person {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   name      String
//   visible   Boolean  @default(true)
//   company   Company @relation(fields: [companyId], references: [id])
//   companyId Int @unique
//   due_date  DateTime
//   title     String   @db.VarChar(255)
//   body      Body
//   category  Category
//   frequency Frequency
//   comments  String
// }

enum Type {
  SA
  SL
}

// enum Category {
//   ACCOUNTS
//   BOOKS
//   REGISTRY
// }

// enum Frequency {
//   DAILY
//   WEEKLY
//   MONTHLY
//   QUARTERLY
//   YEARLY
// }

// enum Body {
//   BOARD
//   J_DIRECTORS
//   J_S_DIRECTORS
//   SOLE_DIRECTOR
//   SHAREHOLDERS
//   SOLE_SHAREHOLDER
//   AUDITOR
// }

// enum Role {
//   CHAIRMAN
//   MEMBER
//   SECRETARY
//   AUDITOR
// }